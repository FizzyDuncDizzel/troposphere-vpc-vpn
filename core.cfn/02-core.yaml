common_parameters: &common_parameters
  CustomerName: ${customer}
  EnvironmentName: ${environment}

namespace: ${customer}-${environment}

sys_path: ./

stacks:
  core-vpc:
    class_path: core_blueprints.vpc.Vpc
    variables:
      <<: *common_parameters
      VpcInstanceTenancy: ${default vpc_instance_tenancy::default}
      VpcCidr: ${vpc_cidr}
      PublicSubnet1: ${public_subnet_1}
      PublicSubnet2: ${public_subnet_2}
      PublicSubnet3: ${public_subnet_3}
      PrivateSubnet1: ${private_subnet_1}
      PrivateSubnet2: ${private_subnet_2}
      PrivateSubnet3: ${private_subnet_3}
  core-roles:
    class_path: core_blueprints.roles.Roles
    variables:
      <<: *common_parameters
      ChefBucketArn: ${rxref core-chefbuckets::ChefBucketArn}
      ChefDataBucketArn: ${rxref core-chefbuckets::ChefDataBucketArn}
  core-securitygroups:
    class_path: core_blueprints.security_groups.SecurityGroups
    variables:
      <<: *common_parameters
      VpcId: ${output core-vpc::VPC}
  core-vpnserver:
    class_path: core_blueprints.vpn_server.VpnServer
    variables:
      <<: *common_parameters
      # VPC/Networking
      CoreVPCStack: ${output core-vpc::StackName}
      VpnEipPublicIp: ${rxref core-vpneip::VpnEipPublicIp}
      VpcCidr: ${vpc_cidr}
      VpcId: ${output core-vpc::VPC}
      # VPN Server Configuration
      AMILookupArn: ${xref ami-lookup-${environment}::AmiIdLambdaFunctionQualifiedArn}
      KeyName: ${ssh_key_name}
      BucketKey: ${default vpn_s3_bucket_key::vpnservers}
      ChefBucketName: ${rxref core-chefbuckets::ChefBucketName}
      ChefDataBucketName: ${rxref core-chefbuckets::ChefDataBucketName}
      ManagementInstanceType: ${default vpn_instance_type::t2.micro}
      VPNManagedPolicies: ${output core-roles::CommonPolicy}
      VPNSecurityGroups: ${output core-securitygroups::AllSecurityGroup},${output core-securitygroups::VPNSecurityGroup}
      VPNSubnet: ${vpn_subnet}
      ChefRunList: ${default vpn_chef_client_runlist::undefined}
      VpcInstanceTenancy: ${default vpc_instance_tenancy::default}
  core-chefrun-docs:
    class_path: core_blueprints.ssm_chefrun_documents.SSMChefRunDocuments
  core-alert:
    class_path: core_blueprints.sns_topic.SnsTopic
  core-vpnalarm:
    class_path: core_blueprints.cw_alarm.CwAlarm
    variables:
      <<: *common_parameters
      AlarmDescription: Alarms when OpenVPN service is found to not be running properly
      AlertTopicArn: ${output core-alert::TopicARN}
      AlarmThreshold: 0
      EvaluationPeriods: 2
      MetricName: service.status
      Namespace: OpenVPN
      Statistic: Maximum
      TreatMissingData: breaching
